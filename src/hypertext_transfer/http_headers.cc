#include <vector>
#include "./http_headers.hh"

namespace hypertext_transfer {
    using namespace std;

    // Hypertext Transfer Protocol Header Vector
    vector<HttpHeader> headers_vector() {
        const vector<HttpHeader> headers = {
            HTTP_ACCEPT,
            HTTP_ACCEPT_CLIENT_HINT,
            HTTP_ACCEPT_ENCODING,
            HTTP_ACCEPT_LANGUAGE,
            HTTP_ACCEPT_PATCH,
            HTTP_ACCEPT_POST,
            HTTP_ACCEPT_RANGES,
            HTTP_ACCESS_CONTROL_ALLOW_CREDENTIALS,
            HTTP_ACCESS_CONTROL_ALLOW_HEADERS,
            HTTP_ACCESS_CONTROL_ALLOW_METHODS,
            HTTP_ACCESS_CONTROL_ALLOW_ORIGIN,
            HTTP_ACCESS_CONTROL_EXPOSE_HEADERS,
            HTTP_ACCESS_CONTROL_MAX_AGE,
            HTTP_ACCESS_CONTROL_REQUEST_HEADERS,
            HTTP_ACCESS_CONTROL_REQUEST_METHOD,
            HTTP_AGE,
            HTTP_ALLOW,
            HTTP_ALTERNATIVE_SERVICE,
            HTTP_ALTERNATIVE_USED,
            HTTP_AUTHORIZATION,
            HTTP_CACHE_CONTROL,
            HTTP_CLEAR_SITE_DATA,
            HTTP_CONNECTION,
            HTTP_CONTENT_DIGEST,
            HTTP_CONTENT_DISPOSITION,
            HTTP_CONTENT_ENCODING,
            HTTP_CONTENT_LANGUAGE,
            HTTP_CONTENT_LENGTH,
            HTTP_CONTENT_LOCATION,
            HTTP_CONTENT_RANGE,
            HTTP_CONTENT_SECURITY_POLICY,
            HTTP_CONTENT_SECURITY_POLICY_REPORT_ONLY,
            HTTP_CONTENT_TYPE,
            HTTP_COOKIE,
            HTTP_CROSS_ORIGIN_EMBEDDER_POLICY,
            HTTP_CROSS_ORIGIN_OPENER_POLICY,
            HTTP_CROSS_ORIGIN_RESOURCE_POLICY,
            HTTP_DATE,
            HTTP_DEVICE_MEMORY,
            HTTP_ENTITY_TAG,
            HTTP_EXPECT,
            HTTP_EXPIRES,
            HTTP_FORWARDED,
            HTTP_FROM,
            HTTP_HOST,
            HTTP_IF_MATCH,
            HTTP_IF_MODIFIED_SINCE,
            HTTP_IF_NONE_MATCH,
            HTTP_IF_RANGE,
            HTTP_IF_UNMODIFIED_SINCE,
            HTTP_KEEP_ALIVE,
            HTTP_LAST_MODIFIED,
            HTTP_LINK,
            HTTP_LOCATION,
            HTTP_MAXIMUM_FORWARDS,
            HTTP_ORIGIN,
            HTTP_PRIORITY,
            HTTP_PROXY_AUTHENTICATION,
            HTTP_PROXY_AUTHORIZATION,
            HTTP_RANGE,
            HTTP_REFERER,
            HTTP_REFERRER_POLICY,
            HTTP_REFRESH,
            HTTP_REPR_DIGEST,
            HTTP_RETRY_AFTER,
            HTTP_SECURE_FETCH_DESTINATION,
            HTTP_SECURE_FETCH_MODE,
            HTTP_SECURE_FETCH_SITE,
            HTTP_SECURE_FETCH_USER,
            HTTP_SECURE_PURPOSE,
            HTTP_SECURE_WEBSOCKET_ACCEPT,
            HTTP_SECURE_WEBSOCKET_EXTENTIONS,
            HTTP_SECURE_WEBSOCKET_KEY,
            HTTP_SECURE_WEBSOCKET_PROTOCOL,
            HTTP_SECURE_WEBSOCKET_VERSION,
            HTTP_SERVER,
            HTTP_SERVER_TIMING,
            HTTP_SERVICE_WORKER,
            HTTP_SERVICE_WORKER_ALLOWED,
            HTTP_SERVICE_WORKER_NAVIGATION_PRELOAD,
            HTTP_SET_COOKIE,
            HTTP_SOURCEMAP,
            HTTP_STRICT_TRANSPORT_SECURITY,
            HTTP_TRANSFER_ENCODING_TYPE,
            HTTP_TIMING_ALLOW_ORIGIN,
            HTTP_TRAILER,
            HTTP_TRANSFER_ENCODING,
            HTTP_UPGRADE,
            HTTP_UPGRADE_REQUESTS,
            HTTP_USER_AGENT,
            HTTP_VARY,
            HTTP_VIA_PROXY,
            HTTP_WANT_CONTENT_DIGEST,
            HTTP_WANT_REPRESENTATION_DIGEST,
            HTTP_WWW_AUTHENTICATE,
            HTTP_X_CONTENT_TYPE_OPTIONS,
            HTTP_X_FRAME_OPTIONS,
        };

        return headers;
    }
}
